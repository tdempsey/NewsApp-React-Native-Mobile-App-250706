import { newsApiKey } from "./ApiKey";
import axios from "axios";
import { generateNewsArticles } from './generateDummyData.js'; // Adjust path if necessary

// Endpoints

const apiBaseUrl = "https://newsapi.org/v2";

// Function to simulate an API call returning dummy data
const simulateApiCall = (dataToReturn, delay = 1000) => {
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve({ articles: dataToReturn }); // Ensure it matches the { articles: [...] } structure
    }, delay);
  });
};

export const fetchRecommendedNews = async () => {
  console.log('Fetching DUMMY Recommended News...');
  // const dummyArticles = generateNewsArticles(15); // Generate 15 recommended news articles
  // return simulateApiCall(dummyArticles);

  // When you want to use the real API again, comment out the above two lines
  // and uncomment the lines below:
  
  try {
    const response = await axios.get(`${NEWS_API_BASE_URL}/everything?q=tech&language=en&sortBy=relevancy&apiKey=${NEWS_API_KEY}`);
    return response.data;
  } catch (error) {
    console.error('Error fetching recommended news:', error);
    throw error;
  }
  
};

const breakingNewsUrl = `${apiBaseUrl}/top-headlines?country=us&apiKey=${newsApiKey}`;
const recommendedNewsUrl = `${apiBaseUrl}/top-headlines?country=us&category=business&apiKey=${newsApiKey}`;

const discoverNewsUrl = (discover) =>
  `${apiBaseUrl}/top-headlines?country=us&category=${discover}&apiKey=${newsApiKey}`;


const searchNewsUrl = (query) =>
  `${apiBaseUrl}/everything?q=${query}&apiKey=${newsApiKey}`;

const newsApiCall = async (endpoints, params) => {
  const options = {
    method: "GET",
    url: endpoints,
    params: params ? params : {},
  };

  try {
    const response = await axios.request(options);
    return response.data;
  } catch (error) {
    console.log(error);
    return {};
  }
};

export const fetchBreakingNews = async () => {
  return await newsApiCall(breakingNewsUrl);
};

/*export const fetchRecommendedNews = async () => {
  return await newsApiCall(recommendedNewsUrl);
}; */

export const fetchDiscoverNews = async (discover) => {
  return await newsApiCall(discoverNewsUrl(discover));
};


export const fetchSearchNews = async (query) => {
  const endpoint = searchNewsUrl(query);
  return await newsApiCall(endpoint);
};
